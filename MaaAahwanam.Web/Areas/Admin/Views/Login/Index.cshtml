@model Tuple<MaaAahwanam.Models.UserLogin,MaaAahwanam.Models.UserDetail>
    <html>
    <head>
        <script type="text/javascript">
            alert(TempData["AlertMessage"]);
        </script>
        <meta charset="UTF-8" />
        <title>MaAdmin Dashboard</title>
        <meta content="width=device-width, initial-scale=1.0" name="viewport" />
        <meta content="" name="description" />
        <meta content="" name="author" />
        <!--[if IE]>
           <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
           <![endif]-->
        <!-- GLOBAL STYLES -->
        <!-- PAGE LEVEL STYLES -->
        <link rel="stylesheet" href="../Assets/plugins/bootstrap/css/bootstrap.css" />
        <link rel="stylesheet" href="../Assets/css/login.css" />
        <link rel="stylesheet" href="../Assets/plugins/magic/magic.css" />
        <!-- END PAGE LEVEL STYLES -->
        <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
        <!--[if lt IE 9]>
          <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
          <script src="https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js"></script>
        <![endif]-->
    </head>
    <!-- END HEAD -->
    <!-- BEGIN BODY -->
    <body>

        <!-- PAGE CONTENT -->
        <div class="container">
            <div class="text-center">
                <img src="../Assets/img/logo.png" id="logoimg" alt=" Logo" />
            </div>
            <div class="tab-content">
                <div id="login" class="tab-pane active">
                    @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @class = "form-signin", @id = "LoginForm", @autocomplete = "off" }))
                    {
                        <p class="text-muted text-center btn-block btn btn-primary btn-rect">
                            Enter your username and password
                        </p>
                        @Html.TextBoxFor(model => this.Model.Item1.UserName, new { @class = "form-control", placeholder = "Username", required = "required", @type = "email",@autofocus= "autofocus" })

                        @Html.PasswordFor(model => this.Model.Item1.Password, new { @class = "form-control", placeholder = "Password", required = "required" }) //, @id = "PasswordValue_Login"
                        <div align="center"><button class="btn text-muted text-center btn-danger" name="Command" value="Authenticate" type="submit">Sign in</button></div>
                    }
                </div>
                <div id="forgot" class="tab-pane">
                    @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @class = "form-signin", @id = "ForgotpasswordForm", @autocomplete = "off" }))
                    {
                        <p class="text-muted text-center btn-block btn btn-primary btn-rect">Enter your valid e-mail</p>
                        @Html.TextBoxFor(model => this.Model.Item1.UserName, new { @class = "form-control", placeholder = "Your E-mail", required = "required", @type = "email" })
                        <br />
                        <button class="btn text-muted text-center btn-success" name="Command" value="ForgotPassword" type="submit">Recover Password</button>
                    }
                </div>
                <div id="signup" class="tab-pane">
                    @using (Html.BeginForm("Index", "Login", FormMethod.Post, new { @class = "form-signin", @id = "RegistrationForm", @autocomplete = "off" }))
                    {
                        <p class="text-muted text-center btn-block btn btn-primary btn-rect">Please Fill Details To Register</p>
                        @Html.TextBoxFor(tuple => tuple.Item2.FirstName, new { @class = "form-control", placeholder = "First Name", required = "required" })
                        @Html.TextBoxFor(tuple => tuple.Item2.LastName, new { @class = "form-control", placeholder = "Last Name", required = "required" })
                        @Html.TextBoxFor(tuple => tuple.Item1.UserName, new { @class = "form-control", placeholder = "Username", required = "required", @type = "email" })
                        @Html.PasswordFor(tuple => tuple.Item1.Password, new { @class = "form-control", placeholder = "Password", required = "required", @id = "PasswordValue_Reg" })
                        @Html.PasswordFor(tuple => tuple.Item1.Password, new { @class = "form-control", placeholder = "Re type Password", required = "required", @id = "ConfirmPassword" })
                        <button class="btn text-muted text-center btn-success" name="Command" value="Register" type="submit" onclick="check();">Register</button>
                    }
                </div>
            </div>
            <div class="text-center" style="display:none">
                <ul class="list-inline">
                    <li><a class="btn btn-default" href="#login" data-toggle="tab" onclick="Clear();">Login</a></li>
                    <li><a class="btn btn-default" href="#forgot" data-toggle="tab" onclick="Clear();">Forgot Password</a></li>
                    <li><a class="btn btn-default" href="#signup" data-toggle="tab" onclick="Clear();">Signup</a></li>
                </ul>
            </div>


        </div>

        <!--END PAGE CONTENT -->
        <!-- PAGE LEVEL SCRIPTS -->
        <script src="../Assets/plugins/jquery-2.0.3.min.js"></script>
        <script src="../Assets/plugins/bootstrap/js/bootstrap.js"></script>
        <script src="../Assets/js/login.js"></script>
        <!--END PAGE LEVEL SCRIPTS -->
        <script>
            $(document).ready(function () {
                $.ajax({
                    type: "POST",
                    url: window.location.href.split("/")[0] + '//' + window.location.href.split("/")[2] + '/Admin/Login/RegularExpressionPattern_Password',
                    data: {},
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        document.getElementById("PasswordValue_Login").pattern = result;
                        document.getElementById("PasswordValue_Reg").pattern = result;
                    },
                    error: function (data) {
                    },
                });
            });
            function check() {
                if (document.getElementById("PasswordValue_Reg").value === document.getElementById("ConfirmPassword").value) {
                    ConfirmPassword.setCustomValidity("");
                }
                else {
                    ConfirmPassword.setCustomValidity("Passwords Don't Match");
                }
            }
            function Clear() {
                document.getElementById("LoginForm").reset();
                document.getElementById("ForgotpasswordForm").reset();
                document.getElementById("RegistrationForm").reset();
            }
        </script>
        <script>
            (function (i, s, o, g, r, a, m) {
                i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                    (i[r].q = i[r].q || []).push(arguments);
                }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g;
                m.parentNode.insertBefore(a, m);
            })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

            ga('create', 'UA-66938345-1', 'auto');
            ga('send', 'pageview');

        </script>
    </body>
    <!-- END BODY -->
</html>
